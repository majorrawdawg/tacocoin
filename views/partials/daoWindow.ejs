<%# Taco DAO Window EJS Partial %>
<div class="window-dao" id="taco-dao-window" style="display: none; position: fixed; z-index: 10;">
  <div class="title-bar">
    <div class="title-bar-text">Taco DAO</div>
    <div class="title-bar-controls">
        <button aria-label="Minimize" onclick="minimizeWindow('taco-dao-window');"><i class="fas fa-minus"></i></button>
        <button aria-label="Maximize" onclick="maximizeWindow('taco-dao-window');"><i class="fas fa-expand"></i></button>
        <button style="font-weight: bold;" aria-label="Close" onclick="closeWindow('taco-dao-window');">X</button>
      </div>
  </div>
  <div class="window-body">
    <p class="neon-effect">Welcome to the Taco DAO!</p>
    <p>Here you will be able to participate in governance and vote on proposals to help shape the future of $TACO and journey together on our mission.</p>
    <p>Stay spicy!</p>
  </div>
</div>
<script>
  let originalWindowState = {};
  
  function closeWindow(windowId) {
      const windowElement = document.getElementById(windowId);
      windowElement.style.display = 'none';
      updateTaskbarIcon(windowId, false);  // Assuming a function to update taskbar icons
      originalWindowState[windowId] = {}; // Clear memory of the window state when closed
  }
  
  function minimizeWindow(windowId) {
      const windowElement = document.getElementById(windowId);
      if (windowElement.style.display !== 'none') {
          windowElement.style.display = 'none';
          updateTaskbarIcon(windowId, true);  // Update taskbar to show the window as minimized
      } else {
          windowElement.style.display = 'block';
          updateTaskbarIcon(windowId, false); // Update taskbar to show the window as not minimized
      }
  }
  
  function maximizeWindow(windowId) {
      const windowElement = document.getElementById(windowId);
      if (!originalWindowState[windowId]) {
          saveOriginalState(windowElement, windowId);
      }
      if (!windowElement.classList.contains('maximized')) {
          maximize(windowElement);
      } else {
          restore(windowElement, originalWindowState[windowId]);
      }
  }
  
  function saveOriginalState(element, id) {
      originalWindowState[id] = {
          width: element.style.width,
          height: element.style.height,
          top: element.style.top,
          left: element.style.left,
          display: element.style.display
      };
  }
  
  function maximize(element) {
      element.style.width = '100vw';
      element.style.height = '100vh';
      element.style.top = '0';
      element.style.left = '0';
      element.classList.add('maximized');
  }
  
  function restore(element, state) {
      element.style.width = state.width;
      element.style.height = state.height;
      element.style.top = state.top;
      element.style.left = state.left;
      element.classList.remove('maximized');
  }
  
  // This function would need to be defined to handle taskbar icon updates
  function updateTaskbarIcon(windowId, isMinimized) {
    // Find the corresponding taskbar icon
    const icon = document.querySelector(`.taskbar-app[data-window='${windowId}']`);
    if (icon) {
        if (isMinimized) {
            icon.classList.add('minimized');
            icon.onclick = () => restoreWindow(windowId);  // Set onclick to restore the window
        } else {
            icon.classList.remove('minimized');
            icon.onclick = () => minimizeWindow(windowId);  // Set onclick to minimize the window
        }
    }
}

function restoreWindow(windowId) {
    const windowElement = document.getElementById(windowId);
    windowElement.style.display = 'block';
    updateTaskbarIcon(windowId, false);
}

  
  </script>
  